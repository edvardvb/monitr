<div class="button-container">
  <div class="button-wrapper">
    <div class="button-box">
      <a href=""><i id="power" class="fa fa-power-off fa-2x <%= $redis.get 'power' %>" onclick="toggleOnOff(this)"></i></a>
    </div>
    <div class="button-box">
      <a href="/"><i class="fa fa-car fa-2x"></i></a>
    </div>
    <div class="button-box">
      <a href=""><i id="heater" class="fa fa-fire fa-2x <%= $redis.get 'heater' %>" onclick="toggleOnOff(this)"></i></a>
    </div>
    <div class="button-box">
      <a href=""><i id="lock" class="fa fa-lock fa-2x <%= $redis.get 'lock' %>" onclick="toggleOnOff(this)"></i></a>
    </div>
    <div class="button-box">

      <div class="rpm-text" id="kmh"> <script type="text/javascript">
        var floatspeed = <%= $redis.get 'vehicle_speed' %>;
        var round = Math.round(floatspeed);
        document.getElementById("kmh").innerHTML = round + "   kmh";
      </script>  </div>
      <canvas id="vehicle" width="125" height="100">
      <script type="text/javascript">
      var opts = {
        lines: 12, // The number of lines to draw
        angle: 0.15, // The length of each line
        lineWidth: 0.44, // The line thickness
        pointer: {
          length: 0.9, // The radius of the inner circle
          strokeWidth: 0.035, // The rotation offset
          color: '#000000' // Fill color
        },
        limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
        colorStart: '#6FADCF',   // Colors
        colorStop: '#8FC0DA',    // just experiment with them
        strokeColor: '#E0E0E0',   // to see which ones work best for you
        generateGradient: true
        };
        var target = document.getElementById('vehicle'); // your canvas element
        var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 200; // set max gauge value
        gauge.animationSpeed = 32; // set animation speed (32 is default value)
        var speed = <%= $redis.get 'vehicle_speed' %>
        gauge.set(speed); // set actual value
      </script>
    </canvas>

    </div>

    <div class="button-box">
      <div class="rpm-text"> <%= $redis.get 'engine_speed' %> rpm </div>
      <canvas id="engine" width="125" height="100">
      <script type="text/javascript">
      var opts = {
        lines: 12, // The number of lines to draw
        angle: 0.15, // The length of each line
        lineWidth: 0.44, // The line thickness
        pointer: {
          length: 0.9, // The radius of the inner circle
          strokeWidth: 0.035, // The rotation offset
          color: '#000000' // Fill color
        },
        limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
        colorStart: '#6FADCF',   // Colors
        colorStop: '#8FC0DA',    // just experiment with them
        strokeColor: '#E0E0E0',   // to see which ones work best for you
        generateGradient: true
        };
        var target = document.getElementById('engine'); // your canvas element
        var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 6000; // set max gauge value
        gauge.animationSpeed = 32; // set animation speed (32 is default value)
        var speed = <%= $redis.get 'engine_speed' %>
        gauge.set(speed); // set actual value
      </script>
    </canvas>

    </div>


    <div class="button-box">
      <div class="200x160px" id="gauge">
        <script>
          var g = new JustGage({
            id: "gauge",
            value: 67,
            min: 0,
            max: 200,
            title: "Speed",
            label: "km/h",
            customSectors: [0, 150, 180]
          });
        </script>
      </div>

    </div>




    <div class="button-box" id="map">
      <script>
      function initMap() {
        var mapDiv = document.getElementById('map');
        var p15gps = {lat: <%= $redis.get 'latitude' %>, lng: <%= $redis.get 'longitude' %>};
        var map = new google.maps.Map(mapDiv, {
          center: p15gps,
          zoom: 18,
          mapTypeId: google.maps.MapTypeId.SATELLITE
        });
        var marker = new google.maps.Marker({
          position: p15gps,
          map: map,
          title: p15gps
        });
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?callback=initMap"
        async defer></script>
    </div>

  </div>
</div>
